# Generated by Django 3.2.9 on 2023-05-07 12:31

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'all_categories',
            },
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('is_live', models.BooleanField(default=False)),
                ('first_name', models.CharField(default='', max_length=255, verbose_name='first name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SellerAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pincode', models.CharField(max_length=50)),
                ('postoffice', models.CharField(max_length=150)),
                ('town_or_city', models.CharField(max_length=150)),
                ('district', models.CharField(max_length=150)),
                ('state', models.CharField(max_length=150)),
                ('country', models.CharField(max_length=150)),
                ('street_address', models.CharField(default='', max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'all_seller_addresses',
            },
        ),
        migrations.CreateModel(
            name='SellerWarehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_warehouse_name', models.CharField(max_length=50)),
                ('s_warehouse_address', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'all_seller_warehouses',
            },
        ),
        migrations.CreateModel(
            name='SellerWarehouseAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_warehouse_pincode', models.CharField(max_length=50)),
                ('s_warehouse_state', models.CharField(max_length=50)),
                ('s_warehouse_city', models.CharField(max_length=50)),
                ('s_warehouse_address_line1', models.CharField(max_length=150)),
                ('s_warehouse_address_line2', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'all_seller_warehouse_addresses',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_category_name', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.category')),
            ],
            options={
                'db_table': 'all_sub_categories',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('warehouse_name', models.CharField(default='', max_length=50, primary_key=True, serialize=False)),
                ('id', models.CharField(default='', max_length=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'all_warehouses',
            },
        ),
        migrations.CreateModel(
            name='IsLive',
            fields=[
            ],
            options={
                'verbose_name': 'Is Live',
                'verbose_name_plural': 'Is Live',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.permission',),
            managers=[
                ('objects', django.contrib.auth.models.PermissionManager()),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseAddress1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pincode', models.CharField(max_length=50)),
                ('postoffice', models.CharField(max_length=150)),
                ('town_or_city', models.CharField(max_length=150)),
                ('district', models.CharField(max_length=150)),
                ('state', models.CharField(max_length=150)),
                ('country', models.CharField(max_length=150)),
                ('street_address', models.CharField(default='', max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('warehouse_name', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.warehouse')),
            ],
            options={
                'db_table': 'all_warehouse_addresses1',
            },
        ),
        migrations.CreateModel(
            name='WarehouseAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pincode', models.CharField(max_length=50)),
                ('postoffice', models.CharField(max_length=150)),
                ('town_or_city', models.CharField(max_length=150)),
                ('district', models.CharField(max_length=150)),
                ('state', models.CharField(max_length=150)),
                ('country', models.CharField(max_length=150)),
                ('street_address', models.CharField(default='', max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('warehouse_name', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.warehouse')),
            ],
            options={
                'db_table': 'all_warehouse_addresses',
            },
        ),
        migrations.CreateModel(
            name='SubSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_sub_category_name', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sub_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.subcategory')),
            ],
            options={
                'db_table': 'all_sub_sub_categories',
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('seller_mobile', models.CharField(default='', max_length=20)),
                ('seller_otp', models.CharField(default='', max_length=6)),
                ('otp_verified', models.BooleanField(default='False')),
                ('seller_name', models.CharField(max_length=50)),
                ('company_warehouse', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.warehouse')),
                ('seller_warehouse', models.ManyToManyField(to='api.SellerWarehouse')),
                ('username', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'all_sellers',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=50)),
                ('brand', models.CharField(max_length=30)),
                ('product_price', models.CharField(max_length=30)),
                ('product_description', models.TextField(default='', max_length=300)),
                ('product_image', models.ImageField(default='', upload_to='images/product_images')),
                ('ratings', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.category')),
                ('product_seller', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.seller')),
                ('product_sub_subcategory', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.subsubcategory')),
                ('product_subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.subcategory')),
            ],
            options={
                'db_table': 'all_products',
            },
        ),
    ]
